[package]
name = "llama-cpp-2"
description = "llama.cpp bindings for Rust"
version = "0.1.61"
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/utilityai/llama-cpp-rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
enumflags2 = "0.7.10"
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", version = "0.1.61" }
thiserror = { workspace = true }
tracing = { workspace = true }

[features]
cuda = ["llama-cpp-sys-2/cuda"]
metal = ["llama-cpp-sys-2/metal"]
vulkan = ["llama-cpp-sys-2/vulkan"]
native = ["llama-cpp-sys-2/native"]
sampler = []

[target.'cfg(target_feature = "avx")'.dependencies]
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", features = ["avx"] }
[target.'cfg(target_feature = "avx2")'.dependencies]
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", features = ["avx2"] }
[target.'cfg(target_feature = "avx512f")'.dependencies]
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", features = ["avx512"] }
[target.'cfg(target_feature = "avx512vbmi")'.dependencies]
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", features = ["avx512_vmbi"] }
[target.'cfg(target_feature = "avx512vnni")'.dependencies]
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", features = ["avx512_vnni"] }
[target.'cfg(target_feature = "f16c")'.dependencies]
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", features = ["f16c"] }
[target.'cfg(target_feature = "fma")'.dependencies]
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", features = ["fma"] }

[target.'cfg(all(target_os = "macos", any(target_arch = "aarch64", target_arch = "arm64")))'.dependencies]  
llama-cpp-sys-2 = { path = "../llama-cpp-sys-2", features=["metal"], version = "0.1.48" }

[lints]
workspace = true

[package.metadata.docs.rs]
features = ["sampler"]
